// *********************************
// ** auto generated vertexshader **
// *********************************

#define SHADER_EDITOR_2013_COMPILE

// Combos
// DYNAMIC: "COMPRESSED_VERTS"		"0..1"
// DYNAMIC: "SKINNING"		"0..1"
// STATIC: "FLASHLIGHT"		"0..1"

// Includes
#include "common_vs_fxc.h"


// Constants
const float4x3 g_cCMatrix_View		: register( c48 );
const float4x4 g_cFlashlightWorldToTexture		: register( c51 );

// Semantic structures
struct VS_INPUT
{
	float3 vPos					:	POSITION;
	float4 vBoneWeights			:	BLENDWEIGHT;
	float4 vBoneIndices			:	BLENDINDICES;
	float4 vNormal				:	NORMAL;
};

struct VS_OUTPUT
{
	float4 vProjPos				:	POSITION;
	float2 vTexCoord_0			:	TEXCOORD0;
	float3 vTexCoord_1			:	TEXCOORD1;
	float3 vTexCoord_2			:	TEXCOORD2;
	float4 vTexCoord_3			:	TEXCOORD3;
	float4 vTexCoord_4			:	TEXCOORD4;
	float4 vColor_0				:	COLOR0;
};

// Entry point
VS_OUTPUT main( const VS_INPUT In )
{
	VS_OUTPUT Out;
	float3 _var0 = (float3)0;
	DecompressVertex_Normal( In.vNormal, _var0 );
	float4 _var1 = float4( 0.000000, 0.000000, 0.000000, 0.000000 );
	float3 _var2 = (float3)0;
	float3 _var3 = (float3)0;
	SkinPositionAndNormal( SKINNING, float4( In.vPos, 1 ), _var0,
			In.vBoneWeights, In.vBoneIndices,
			_var2, _var3 );
	float3 _var4 = normalize( _var0 );
	float4 _var5 = mul( float4(_var2.xyz,1), cViewProj );
	float4 _var6 = float4( _var2, float( 1.000000 ) );
#if ( FLASHLIGHT == 1 )
		float4 _var7 = mul( float4(_var2.xyz,1), g_cFlashlightWorldToTexture );
		_var1 = _var7;
#endif
	float3 _var8 = mul( _var6, g_cCMatrix_View );
	float4 _var9 = float4( GetVertexAttenForLight( _var2, 0 ),
			GetVertexAttenForLight( _var2, 1 ),
			GetVertexAttenForLight( _var2, 2 ),
			GetVertexAttenForLight( _var2, 3 ) );
	_var8 = normalize( _var8 );
	_var8 = reflect( _var8, _var4 );
	float2 _var10 = _var8.xy;
	float _var11 = _var8.x;
	float _var12 = _var8.y;
	float _var13 = _var8.z;
	_var11 = pow( _var11, float( 2.000000 ) );
	_var12 = pow( _var12, float( 2.000000 ) );
	_var13 = _var13 + float( 1.000000 );
	_var11 = _var11 + _var12;
	_var13 = pow( _var13, float( 2.000000 ) );
	_var11 = _var11 + _var13;
	_var11 = sqrt( _var11 );
	_var11 = float( 2.000000 ) * _var11;
	_var10 = _var10 / _var11;
	_var10 = _var10 + float( 0.500000 );
	Out.vProjPos = _var5;
	Out.vTexCoord_0 = _var10;
	Out.vTexCoord_1 = _var2;
	Out.vTexCoord_2 = _var3;
	Out.vTexCoord_3 = _var5;
	Out.vTexCoord_4 = _var1;
	Out.vColor_0 = _var9;
	return Out;
}